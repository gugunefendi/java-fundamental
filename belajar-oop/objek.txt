Apa itu Objek (Object)

Pengertian Objek: Objek adalah kumpulan perangkat lunak yang berisi status dan perilaku yang saling terkait.

Untuk memahami Objek didalam pemrograman, cara pertama adalah memahami Objek di dunia nyata.
Contoh objek di dunia nyata: Orang, Sepeda, Meja, Kucing, Motor, Mobil, Apel dll
Objek di dunia nyata memiliki karakteristik: Semuanya memiliki Status dan Perilaku.
Mobil memiliki status: merek, warna, kecepatan dan perilaku: berjalan, berhenti, parkir dll
Orang memiliki status: Nama, tanggal lahir, tempat lahir dan perilaku: makan, minum, berpikir, bekerja dll

Sekarang, coba luangkan waktu sebentar lalu amati objek di dunia nyata yang ada di sekitar kamu. Untuk setiap object yang kamu lihat,
tanyakan kepada diri kamu sendiri dua pertanyaan: 
Apa saja kemungkinan keadaan objek ini?
Apa saja kemungkinan perilaku objek saat ini?

Setelah itu tuliskan pengamatan kamu. Saat melakukannya, kamu akan melihat bahwa objek di dunia nyata bervariasi dalam hal kompleksitas;
lampu meja mungkin hanya memiliki dua kemungkinan keadaan (hidup dan mati) dan dua perilaku (hidup, mati), tetapi TV mungkin memiliki keadaan tamnbahan
(hidup, mati, volume saat ini, stasiun saat ini) dan perilaku (hidup, mati, tambah volume, kurang volume, cari, pindai dan setel).

Objek menyimpan statusnya dalam fields (bidang) atau (variabel dalam beberapa bahasa pemrograman) dan
memaparkan perilakunya melalui method (metode) atau (fungsi dalam beberapa bahasa pemrograman)
Metode beroperasi pada status internal objek dan berfungsi sebagai mekanisme utama untuk komunikasi objek ke objek.
Menyembunyikan status internal dan mengharuskan semua interaksi di lakukan melalui metode objek di kenal sebagai enkapsulasi data - prinsip dasar pemrograman berorientasi objek.

Dengan mengaitkan status (kecepatan sat ini, gigi saat ini) dan menyediakan metode untuk mengubah status tersebut, objek tetap memegang kendali
atas cara dunia luar diizinkan menggunakannya. Misalnya jika mobil memiliki 5 gigi, metode untuk mengubah gigi dapat menolak nilai apapun
yang kurang dari 1 dan lebih dari 5.

Menggabungkan kode ke dalam objek perangkat lunak individual memberikan sejumlah manfaat, termasuk:

1. Modularitas: Kode sumber untuk suatu objek dapat ditulis dan dikelola secara independen dari kode sumber untuk objek lainnya. Setelah dibuat, suatu objek dapat dengan mudah disebarkan di dalam sistem.
2. Menyembunyikan informasi: Dengan hanya berinteraksi dengan metode suatu objek, detail implementasi internalnya tetap tersembunyi dari dunia luar.
3. Penggunaan ulang kode: Jika suatu objek sudah ada (mungkin ditulis oleh pengembang perangkat lunak lain), Anda dapat menggunakan objek tersebut dalam program Anda. 
Hal ini memungkinkan spesialis untuk mengimplementasikan/menguji/men-debug objek yang kompleks dan spesifik untuk tugas tertentu, yang kemudian dapat Anda percaya untuk dijalankan dalam kode Anda sendiri.
4. Kemudahan penyambungan dan debugging: Jika suatu objek tertentu ternyata bermasalah, Anda cukup menghapusnya dari aplikasi dan menyambungkan objek lain sebagai penggantinya. 
Ini sama halnya dengan memperbaiki masalah mekanis di dunia nyata. Jika baut patah, Anda menggantinya , bukan seluruh mesin.